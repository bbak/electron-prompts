"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[284],{4254:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>a});var r=n(4848),s=n(8453);const d={},o="PromptManager",c={id:"api/prompt-manager/index",title:"PromptManager",description:"The PromptManager class orchestrates all spawning of prompts and returning of changed data.",source:"@site/docs/api/prompt-manager/index.md",sourceDirName:"api/prompt-manager",slug:"/api/prompt-manager/",permalink:"/docs/api/prompt-manager/",draft:!1,unlisted:!1,editUrl:"https://github.com/pbxx/electron-prompts/tree/main/packages/create-docusaurus/templates/shared/docs/api/prompt-manager/index.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",next:{title:"spawn()",permalink:"/docs/api/prompt-manager/spawn"}},i={},a=[];function l(e){const t={code:"code",em:"em",h1:"h1",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"promptmanager",children:"PromptManager"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"PromptManager"})," class orchestrates all spawning of prompts and returning of changed data."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"const prompts = new PromptManager(/* options */)\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The class accepts an optional ",(0,r.jsx)(t.code,{children:"options"})," object as a parameter:"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Details"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"width"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"600"})}),(0,r.jsx)(t.td,{children:"Sets the width of the prompt window"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"baseHeight"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"112"})}),(0,r.jsx)(t.td,{children:"The minimum height of the window before content. Prompt window is automatically sized-up for content"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"resizable"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:"Allows the user to resize spawned prompts"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"promptFile"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"electron-prompts/static/prompt/prompt.html"})}),(0,r.jsxs)(t.td,{children:["Set the html file that will be loaded in the prompt window ",(0,r.jsx)(t.em,{children:"(docs coming soon)"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"devMode"})}),(0,r.jsx)(t.td,{children:"No"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:"Enables verbose logging"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var r=n(6540);const s={},d=r.createContext(s);function o(e){const t=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(d.Provider,{value:t},e.children)}}}]);